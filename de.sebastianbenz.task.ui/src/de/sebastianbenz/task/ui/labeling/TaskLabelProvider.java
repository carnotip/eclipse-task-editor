/*******************************************************************************
 * Copyright (c) 2011 Sebastian Benz.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Sebastian Benz - initial API and implementation
 *******************************************************************************/
/*
 * generated by Xtext
 */
package de.sebastianbenz.task.ui.labeling;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;

import com.google.inject.Inject;

import de.sebastianbenz.task.Content;
import de.sebastianbenz.task.Note;
import de.sebastianbenz.task.Project;
import de.sebastianbenz.task.Tag;
import de.sebastianbenz.task.Task;
import de.sebastianbenz.task.TaskModel;
import de.sebastianbenz.task.ui.views.GlobalState;

/**
 * Provides labels for a EObjects.
 * 
 * see
 * http://www.eclipse.org/Xtext/documentation/latest/xtext.html#labelProvider
 */
public class TaskLabelProvider extends DefaultEObjectLabelProvider {

	private static final int MAX_TEXT_LENGTH = 35;

	@Inject
	public TaskLabelProvider(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	String text(EObject eObject) {
		return eObject.eClass().getName();
	}

	String text(TaskModel todo) {
		return "Document";
	}
	
	String text(GlobalState globalState){
		return "Workspace";
	}
	
	String text(Tag tag) {
		return tag.toString().substring(1);
	}

	protected String shorten(String original) {
		if (original == null) {
			return "null";
		}
		String text;
		if (original.length() > MAX_TEXT_LENGTH) {
			text = original.substring(0, MAX_TEXT_LENGTH) + "...";
		} else {
			text = original;
		}
		return text;
	}

	String text(Content content) {
		return shorten(content.getValue());
	}

	String image(TaskModel ele) {
		return  "TodoFile.png";
	}

	String image(Project ele) {
		return "Project.png";
	}
	
	String image(Tag ele) {
		return "Tag.png";
	}

	String image(Task task) {
		return task.isDone() ? "CompletedTask.png" : "OpenTask.png";
	}

	String image(Note ele) {
		return "Note.png";
	}
}
