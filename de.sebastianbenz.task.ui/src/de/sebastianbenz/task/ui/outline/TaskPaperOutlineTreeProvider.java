/*******************************************************************************
 * Copyright (c) 2011 Sebastian Benz.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Sebastian Benz - initial API and implementation
 *******************************************************************************/
/*
 * generated by Xtext
 */
package de.sebastianbenz.task.ui.outline;

import org.eclipse.xtext.ui.editor.outline.impl.AbstractOutlineNode;
import org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider;
import org.eclipse.xtext.ui.editor.outline.impl.DocumentRootNode;
import org.eclipse.xtext.ui.editor.outline.impl.EObjectNode;

import com.google.inject.Inject;

import de.sebastianbenz.task.model.ContentProvider;
import de.sebastianbenz.task.taskPaper.Content;
import de.sebastianbenz.task.taskPaper.Project;
import de.sebastianbenz.task.taskPaper.Todo;

/**
 * customization of the default outline structure
 * 
 */
public class TaskPaperOutlineTreeProvider extends DefaultOutlineTreeProvider {
	
	@Inject
	private ContentProvider contentProvider;

	protected void _createChildren(DocumentRootNode parentNode, Todo todo) {
		for (Content content : contentProvider.getContents(todo)) {
			EObjectNode child = createEObjectNode(parentNode, content);
			createChildrenDispatcher.invoke(child, content);
		}
	}

	protected int levelOf(Content content) {
		return content.getIntend().size();
	}

	protected void _createChildren(AbstractOutlineNode parentNode,
			Project project) {
		for (Content content : contentProvider.getContents(project)) {
			EObjectNode child = createEObjectNode(parentNode, content);
			createChildrenDispatcher.invoke(child, content);
		}
	}

}
