/*
 * generated by Xtext
 */
package de.sebastianbenz.task.ui.labeling;

import static de.sebastianbenz.task.util.Contents.textOf;
import static de.sebastianbenz.task.util.Tasks.isDone;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;

import com.google.inject.Inject;

import de.sebastianbenz.task.tagging.Region;
import de.sebastianbenz.task.taskPaper.Content;
import de.sebastianbenz.task.taskPaper.Note;
import de.sebastianbenz.task.taskPaper.Project;
import de.sebastianbenz.task.taskPaper.Task;
import de.sebastianbenz.task.taskPaper.Todo;

/**
 * Provides labels for a EObjects.
 * 
 * see
 * http://www.eclipse.org/Xtext/documentation/latest/xtext.html#labelProvider
 */
public class TaskPaperLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	public TaskPaperLabelProvider(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	String text(EObject eObject) {
		return eObject.eClass().getName();
	}

	String text(Todo todo) {
		return "Document";
	}

	protected String shorten(String original) {
		if (original == null) {
			return "null";
		}
		String text;
		if (original.length() > 35) {
			text = original.substring(0, 35) + "...";
		} else {
			text = original;
		}
		return text;
	}

	String text(Content project) {
		return shorten(textOf(project));
	}

	String image(Todo ele) {
		return  "TodoFile.png";
	}

	String image(Project ele) {
		return "Project.png";
	}
	
	String image(Region ele) {
		return "Tag.gif";
	}

	String image(Task task) {
		return isDone(task) ? "CompletedTask.png" : "OpenTask.png";
	}

	String image(Note ele) {
		return "Note.png";
	}
}
