/*
* generated by Xtext
*/
package de.sebastianbenz.task.ui.labeling;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;

import com.google.inject.Inject;

import de.sebastianbenz.task.taskPaper.Content;
import de.sebastianbenz.task.taskPaper.Task;
import de.sebastianbenz.task.taskPaper.Todo;

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#labelProvider
 */
public class TaskPaperLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	public TaskPaperLabelProvider(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}
	
	String text(EObject eObject){
		return eObject.eClass().getName();
	}
	
//	String text(Todo todo){
//		return "Document";
//	}
//	
//	String text(Task todo){
//		return "- " + shorten(todo.getText());
//	}
//
//	protected String shorten(String original) {
//		if(original == null){
//			return "null";
//		}
//		String text;
//		if(original.length() > 10){
//			text = original.substring(0, 10) + "...";
//		}else{
//			text = original;
//		}
//		return text;
//	}
//	
//	String text(Content project){
//		return shorten(project.getText());
//	}

/*
	//Labels and icons can be computed like this:
	
	String text(MyModel ele) {
	  return "my "+ele.getName();
	}
	 
    String image(MyModel ele) {
      return "MyModel.gif";
    }
*/
}
